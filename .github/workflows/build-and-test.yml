name: Build and Test

on:
  push:
    branches: [ main, develop, feature/* ]
    paths:
      - 'backend/**'
      - 'frontend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - 'frontend/**'
  workflow_dispatch:

jobs:
  backend-build:
    runs-on: ubuntu-latest
    name: Build Backend
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 22
      uses: actions/setup-java@v4
      with:
        java-version: '22'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x backend/gradlew

    - name: Build backend
      run: |
        cd backend
        ./gradlew clean build -x test

    - name: Run backend tests
      run: |
        cd backend
        ./gradlew test

    - name: Build Docker image (verification only)
      run: |
        cd backend
        docker build -t preffy-backend:test .
        echo "✅ Docker image built successfully"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: backend-build-reports
        path: |
          backend/build/reports/
          backend/build/test-results/

  frontend-build:
    runs-on: ubuntu-latest
    name: Build Frontend
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Run frontend tests
      run: |
        cd frontend
        npm run test -- --coverage --passWithNoTests

    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: frontend-build
        path: |
          frontend/dist/
          frontend/coverage/

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Checks
    needs: [backend-build, frontend-build]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 22
      uses: actions/setup-java@v4
      with:
        java-version: '22'
        distribution: 'temurin'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Run backend code quality checks
      run: |
        cd backend
        chmod +x gradlew
        ./gradlew check -x test

    - name: Run frontend linting
      run: |
        cd frontend
        npm ci
        npm run lint

    - name: Security scan (backend)
      run: |
        cd backend
        ./gradlew dependencyCheckAnalyze --continue || echo "Security scan completed with findings"

  build-summary:
    runs-on: ubuntu-latest
    name: Build Summary
    needs: [backend-build, frontend-build, code-quality]
    if: always()
    
    steps:
    - name: Build Status Summary
      run: |
        echo "## 🏗️ Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Backend Build | ${{ needs.backend-build.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Frontend Build | ${{ needs.frontend-build.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Code Quality | ${{ needs.code-quality.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.backend-build.result }}" = "success" ] && [ "${{ needs.frontend-build.result }}" = "success" ]; then
          echo "🎉 **All builds completed successfully!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The application is ready for manual deployment when needed." >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Some builds failed.**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please check the failed jobs and fix the issues before deploying." >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📝 Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "- Review build artifacts and test results" >> $GITHUB_STEP_SUMMARY
        echo "- For deployment, use manual deployment scripts in the repository" >> $GITHUB_STEP_SUMMARY
        echo "- Check \`backend/deploy-cloud-run.sh\` for deployment instructions" >> $GITHUB_STEP_SUMMARY
