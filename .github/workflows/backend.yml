name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'

env:
  JAVA_VERSION: '22'
  GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true'

jobs:
  # Validate and test the backend application
  test:
    name: Test & Validate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Setup Gradle cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('backend/**/*.gradle*', 'backend/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-
          
    - name: Make gradlew executable
      run: chmod +x backend/gradlew
      
    - name: Validate Gradle wrapper
      run: cd backend && ./gradlew wrapper --gradle-version=8.5
      
    - name: Run unit tests
      run: cd backend && ./gradlew test --info
      
    - name: Generate test report
      if: always()
      run: cd backend && ./gradlew testReport
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ github.run_number }}
        path: |
          backend/build/reports/tests/
          backend/build/test-results/
        retention-days: 7

  # Build the application and create artifacts
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Setup Gradle cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('backend/**/*.gradle*', 'backend/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-
          
    - name: Make gradlew executable
      run: chmod +x backend/gradlew
      
    - name: Build application
      run: cd backend && ./gradlew build -x test --info
      
    - name: Upload JAR artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-jar-${{ github.run_number }}
        path: backend/build/libs/*.jar
        retention-days: 30

  # Build Docker image (only on main branch push)
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: preffy-backend
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Save Docker image
      run: |
        docker save preffy-backend:latest | gzip > backend-docker-${{ github.sha }}.tar.gz
        
    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-docker-${{ github.run_number }}
        path: backend-docker-${{ github.sha }}.tar.gz
        retention-days: 30

  # Security and quality checks
  security:
    name: Security & Quality Checks
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Setup Gradle cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('backend/**/*.gradle*', 'backend/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-
          
    - name: Make gradlew executable
      run: chmod +x backend/gradlew
      
    - name: Run dependency vulnerability check
      run: cd backend && ./gradlew dependencyCheckAnalyze --info || true
      
    - name: Upload security reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-reports-${{ github.run_number }}
        path: backend/build/reports/
        retention-days: 7
