name: Backend Maintenance

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

env:
  JAVA_VERSION: '22'

jobs:
  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Setup Gradle cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('backend/**/*.gradle*', 'backend/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-
          
    - name: Make gradlew executable
      run: chmod +x backend/gradlew
      
    - name: Check for dependency updates
      run: |
        cd backend
        ./gradlew dependencyUpdates --info
        
    - name: Run security vulnerability check
      run: |
        cd backend
        ./gradlew dependencyCheckAnalyze --info || true
        
    - name: Upload dependency reports
      uses: actions/upload-artifact@v4
      with:
        name: dependency-reports-${{ github.run_number }}
        path: |
          backend/build/reports/dependencyUpdates/
          backend/build/reports/dependency-check-report.html
        retention-days: 30

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Setup Gradle cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('backend/**/*.gradle*', 'backend/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-
          
    - name: Make gradlew executable
      run: chmod +x backend/gradlew
      
    - name: Run code quality checks
      run: |
        cd backend
        ./gradlew check --info || true
        
    - name: Upload quality reports
      uses: actions/upload-artifact@v4
      with:
        name: quality-reports-${{ github.run_number }}
        path: backend/build/reports/
        retention-days: 30

  cleanup:
    name: Cleanup Old Artifacts
    runs-on: ubuntu-latest
    
    steps:
    - name: Delete old artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const artifacts = await github.rest.actions.listArtifactsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            per_page: 100
          });
          
          const oldArtifacts = artifacts.data.artifacts.filter(artifact => {
            const age = Date.now() - new Date(artifact.created_at).getTime();
            const maxAge = 30 * 24 * 60 * 60 * 1000; // 30 days
            return age > maxAge;
          });
          
          for (const artifact of oldArtifacts) {
            console.log(`Deleting artifact: ${artifact.name} (${artifact.created_at})`);
            await github.rest.actions.deleteArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: artifact.id
            });
          }
