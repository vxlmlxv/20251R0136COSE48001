# Production Configuration for Cloud Run with Cloud SQL
# This profile is used when deploying to Cloud Run

# Server Configuration
server.port=8080
server.address=0.0.0.0

# Cloud SQL MySQL Database Configuration (Production)
spring.datasource.url=jdbc:mysql://google/preffy_db?cloudSqlInstance=${CLOUDSQL_INSTANCE_CONNECTION_NAME}&socketFactory=com.google.cloud.sql.mysql.SocketFactory&useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.username=${DB_USER:preffy_user}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration for MySQL
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Connection Pool Configuration (HikariCP) - Optimized for Cloud Run
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.max-lifetime=1800000

# MySQL specific settings
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.properties.hibernate.connection.characterEncoding=UTF-8
spring.jpa.properties.hibernate.connection.useUnicode=true

# Disable H2 Console for production
spring.h2.console.enabled=false

# Production JWT Configuration
app.jwtSecret=${JWT_SECRET}
app.jwtExpirationInMs=604800000

# Production Storage Configuration
app.storage.type=gcs
app.storage.gcs.bucket=${GCS_BUCKET_NAME:preffy-storage}
app.storage.gcs.folder=videos
app.storage.gcs.project-id=${GOOGLE_CLOUD_PROJECT}
app.storage.base-url=https://storage.googleapis.com/${GCS_BUCKET_NAME:preffy-storage}

# Google Cloud Configuration
spring.cloud.gcp.project-id=${GOOGLE_CLOUD_PROJECT}
spring.cloud.gcp.storage.bucket=${GCS_BUCKET_NAME:preffy-storage}
spring.cloud.gcp.storage.enabled=true
spring.cloud.gcp.credentials.enabled=true

# GCP Configuration for services
app.gcp.project-id=${GOOGLE_CLOUD_PROJECT}

# File Upload Configuration
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB

# Actuator Configuration for Health Checks
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.health.datasource.enabled=true
management.health.db.enabled=true

# External API Configuration
app.api.body-feedback.url=${BODY_FEEDBACK_API_URL:https://api.example.com/body-feedback}
app.api.script-feedback.url=${SCRIPT_FEEDBACK_API_URL:https://api.example.com/script-feedback}

# CORS Configuration
app.cors.allowed-origins=${ALLOWED_ORIGINS:https://preffy-video-flow.web.app,https://localhost:3000}
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# Logging Configuration for Production
logging.level.root=INFO
logging.level.com.preffy.videoflow=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.level.com.google.cloud=INFO
logging.level.com.zaxxer.hikari=INFO

# File logging for Cloud Run
logging.file.name=/tmp/application.log
logging.file.max-size=50MB
logging.file.max-history=7
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} [%X{correlationId}] [%X{userId}] [%X{requestId}] - %msg%n

# Console logging pattern for Cloud Run (structured logging)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} [%X{correlationId}] [%X{userId}] [%X{requestId}] - %msg%n

# Actuator endpoints for production monitoring
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Error handling
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on-param
server.error.include-exception=false
